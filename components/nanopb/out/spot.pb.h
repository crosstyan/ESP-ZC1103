/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_SPOT_PB_H_INCLUDED
#define PB_SPOT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Track {
    uint32_t id;
    uint32_t color;
    pb_callback_t speeds;
} Track;

typedef struct _Track_SpeedsEntry {
    uint32_t key;
    float value;
} Track_SpeedsEntry;

typedef struct _Spot {
    pb_callback_t tracks;
} Spot;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Track_init_default                       {0, 0, {{NULL}, NULL}}
#define Track_SpeedsEntry_init_default           {0, 0}
#define Spot_init_default                        {{{NULL}, NULL}}
#define Track_init_zero                          {0, 0, {{NULL}, NULL}}
#define Track_SpeedsEntry_init_zero              {0, 0}
#define Spot_init_zero                           {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Track_id_tag                             1
#define Track_color_tag                          2
#define Track_speeds_tag                         3
#define Track_SpeedsEntry_key_tag                1
#define Track_SpeedsEntry_value_tag              2
#define Spot_tracks_tag                          1

/* Struct field encoding specification for nanopb */
#define Track_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, STATIC,   SINGULAR, UINT32,   color,             2) \
X(a, CALLBACK, REPEATED, MESSAGE,  speeds,            3)
#define Track_CALLBACK pb_default_field_callback
#define Track_DEFAULT NULL
#define Track_speeds_MSGTYPE Track_SpeedsEntry

#define Track_SpeedsEntry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   key,               1) \
X(a, STATIC,   SINGULAR, FLOAT,    value,             2)
#define Track_SpeedsEntry_CALLBACK NULL
#define Track_SpeedsEntry_DEFAULT NULL

#define Spot_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  tracks,            1)
#define Spot_CALLBACK pb_default_field_callback
#define Spot_DEFAULT NULL
#define Spot_tracks_MSGTYPE Track

extern const pb_msgdesc_t Track_msg;
extern const pb_msgdesc_t Track_SpeedsEntry_msg;
extern const pb_msgdesc_t Spot_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Track_fields &Track_msg
#define Track_SpeedsEntry_fields &Track_SpeedsEntry_msg
#define Spot_fields &Spot_msg

/* Maximum encoded size of messages (where known) */
/* Track_size depends on runtime parameters */
/* Spot_size depends on runtime parameters */
#define Track_SpeedsEntry_size                   11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
